# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2

  # Deployment job
  deployToGit:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build

  bundle: # names the job
    runs-on: ubuntu-latest # sets the version of linux we want to use, should be what you have on your server
    needs: deployToGit  # this job depends 
    
    strategy:
      fail-fast: false # tells github to not run further steps if this one fails
      matrix:
        node-version: [12.22.9] # sets the version of node we want to use, should be what you have on your server

    steps:
      - uses: actions/checkout@v2 # fetches your commit to test it
      - name: Use Node.js ${{ matrix.node-version }} # names our step
        uses: actions/setup-node@v1 # downloads node and npm
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm run deploy # installs your dependencies
        env:
          CI: true # shows terminal output!
          
  deploy:
    runs-on: ubuntu-latest
    needs: test  # this job depends on "test" having finished
    if: github.ref == 'refs/heads/gh-pages' # we tell Github to only execute this step if we're on our master branch (so we don't put unfinished branches in production)
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@master
      - name: Deploying to Digitalocean droplet
        uses: appleboy/ssh-action@master # An action made to control Linux servers
        with: # We set all our secrets here for the action, these won't be shown in the action logs
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PW }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd  /home/dealmanager.co.uk/public_html # change to folder
            rm -rf  {*,.*} # clear contents
            git init . # initalise git
            git checkout -b gh-pages # check a branch 
            git pull https://github.com/PTAHume/vuexy.git gh-pages # pull our changes into this 
            git status # confrim
        
