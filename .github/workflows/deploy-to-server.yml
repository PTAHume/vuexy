# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy To Server

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["gh-pages"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:     
  # Deployment job
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/gh-pages' # we tell Github to only execute this step if we're on our master branch (so we don't put unfinished branches in production)
    steps:
      - name: Deploying to Digitalocean droplet
        uses: appleboy/ssh-action@master # An action made to control Linux servers
        with: # We set all our secrets here for the action, these won't be shown in the action logs
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PW }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd  /home/dealmanager.co.uk/public_html # change to folder
            rm -rf  {*,.*} # clear contents
            git init . # initalise git
            git checkout -b gh-pages # check a branch 
            git pull https://github.com/PTAHume/vuexy.git gh-pages # pull our changes into this 
            git status # confrim